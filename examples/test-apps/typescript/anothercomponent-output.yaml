- name: konveyor-analysis
  violations:
    anothercomponent-test-00000:
      description: Find AnotherComponent (the one using React.FC)
      category: potential
      incidents:
      - uri: file:///Users/tsanders/Workspace/analyzer-rule-generator/examples/test-apps/typescript/test-react-app/src/Component.tsx
        message: Found AnotherComponent
        codeSnip: " 5  // This should trigger typescript-provider-test-00000 (propTypes on function component)\n 6  function MyComponent(props: any) {\n 7    return <div>{props.name}</div>;\n 8  }\n 9  \n10  MyComponent.propTypes = {\n11    name: PropTypes.string\n12  };\n13  \n14  // This should trigger typescript-provider-test-00010 (React.FC usage)\n15  const AnotherComponent: React.FC<{ title: string }> = ({ title }) => {\n16    return <h1>{title}</h1>;\n17  };\n18  \n19  // This should trigger typescript-provider-test-00030 (deprecated lifecycle method)\n20  class LegacyComponent extends React.Component {\n21    componentWillMount() {\n22      console.log('Component will mount');\n23    }\n24  \n25    render() {"
        lineNumber: 14
        variables:
          file: file:///Users/tsanders/Workspace/analyzer-rule-generator/examples/test-apps/typescript/test-react-app/src/Component.tsx
      - uri: file:///Users/tsanders/Workspace/analyzer-rule-generator/examples/test-apps/typescript/test-react-app/src/Component.tsx
        message: Found AnotherComponent
        codeSnip: "21    componentWillMount() {\n22      console.log('Component will mount');\n23    }\n24  \n25    render() {\n26      return <div>Legacy Component</div>;\n27    }\n28  }\n29  \n30  // This file imports from react-router, should trigger typescript-provider-test-00040\n31  export { MyComponent, AnotherComponent, LegacyComponent };\n"
        lineNumber: 30
        variables:
          file: file:///Users/tsanders/Workspace/analyzer-rule-generator/examples/test-apps/typescript/test-react-app/src/Component.tsx
      effort: 1
